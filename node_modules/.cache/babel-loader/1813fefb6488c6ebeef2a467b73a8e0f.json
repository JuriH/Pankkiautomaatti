{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/pages/access/js/AccessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport styles from \"../css/accessForm.module.css\";\nimport EmailValidator from \"../utils/emailValidator.js\";\nimport StoreRMDb from \"../utils/storeRMDb.js\";\nimport storeRMBrowser from \"../utils/storeRMBrowser.js\";\nimport Login from \"../utils/login.js\";\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccessForm() {\n  _s();\n\n  const transitionDurationMs = 500;\n  /* References to some elements to get their dimensions */\n\n  const [regNotif, inputFields, modeToggleButton, submitButton] = [...Array(4)].map(React.useRef);\n  /*\n  Using Context to update hook state in RoutesV2.js\n  to detect when user has successfully logged in\n  */\n\n  const {\n    setAuthenticated\n  } = useContext(AuthContext);\n\n  const setAuth = () => setAuthenticated(false);\n  /* Hooks */\n\n\n  const [regNotifHeight, setRegNotifHeight] = useState(0.0);\n  const [modeToggleButtonWidth, setModeToggleButtonWidth] = useState(0.0);\n  const [submitButtonWidth, setSubmitButtonWidth] = useState(0.0); // Change between login and registration (modes)\n\n  const [loginMode, setLoginMode] = useState(-1); // Store valid email address\n\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    email.length > 0 ? console.log(\"Email address set to: \" + email) : console.log(\"Email address removed\");\n  }, [email]); // Store valid password\n\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  /* Form input handlers */\n\n  const HandleEmail = e => {\n    const email = e.target.value;\n    EmailValidator(email) ? setEmail(email) : setEmail(\"\");\n  };\n\n  const HandlePassword = e => {\n    const password = e.target.value;\n    console.log(\"Password length: \" + password.length);\n    password.length >= 8 ? setPassword(password) : setPassword(\"\");\n  };\n  /*\n  Code inside this useEffect will be executed on component mount\n  */\n\n\n  useEffect(() => {\n    setRegNotifHeight(regNotif.current.offsetHeight);\n    setModeToggleButtonWidth(modeToggleButton.current.offsetWidth);\n    setSubmitButtonWidth(submitButton.current.offsetWidth); // eslint-disable-next-line\n  }, []);\n  /* Handle form submit */\n\n  const Validate = async e => {\n    e.preventDefault(); // First value in multiplier chain is the amount of days\n\n    const timestamp = Date.now() + 7 * 24 * 60 * 60 * 1000;\n    new Promise(resolve => {\n      resolve(Login(email, password));\n    }).then(res => {\n      res.data === 1 && new Promise(resolve => {\n        resolve(StoreRMDb(email, timestamp));\n      }).then(res => {\n        if (res.data.length > 1 && res.data !== \"0\") {\n          console.log(\"Cookie stored successfully into database\");\n\n          if (storeRMBrowser(res.data)) {\n            setAuth(true);\n          }\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => Validate(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formInputsContainer,\n          ref: inputFields,\n          style: {\n            transform: loginMode !== -1 && (loginMode ? `translateY(0px)` : `translateY(-${regNotifHeight - regNotifHeight * 0.75}px)`),\n            transition: `${transitionDurationMs}ms ease-in-out 0s`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            onChange: e => {\n              HandleEmail(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            onChange: e => {\n              HandlePassword(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.regNotif,\n          ref: regNotif,\n          style: {\n            opacity: loginMode ? 0.01 : 1\n          },\n          children: \"Password must be at least 8 characters long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          ref: submitButton,\n          disabled: email.length > 0 && password.length > 0 ? false : true,\n          value: loginMode ? \"Login\" : \"Register\",\n          style: {\n            marginLeft: `${modeToggleButtonWidth / 2 - submitButtonWidth / 2}px`,\n            transform: loginMode !== -1 && (loginMode ? `translateY(0px)` : `translateY(${regNotifHeight}px)`),\n            // Specifying transform inside transition makes the animation\n            // apply only to the transform attribute\n            // https://stackoverflow.com/a/21323370/12314897\n            transition: `transform ${transitionDurationMs}ms ease-in-out 0s`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: rememberMe,\n        style: {\n          float: \"left\"\n        },\n        onChange: () => {\n          setRememberMe(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.modeToggleButton,\n      ref: modeToggleButton,\n      onClick: () => loginMode === -1 || loginMode === 1 ? setLoginMode(0) : setLoginMode(1),\n      children: loginMode ? \"Don't have an account?\\nClick here to register\" : \"Already have an account?\\nClick here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AccessForm, \"/X6SG5zkRAm414qJHbdGykkIkus=\");\n\n_c = AccessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessForm\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/js/AccessForm.js"],"names":["React","useEffect","useState","useContext","styles","EmailValidator","StoreRMDb","storeRMBrowser","Login","AuthContext","AccessForm","transitionDurationMs","regNotif","inputFields","modeToggleButton","submitButton","Array","map","useRef","setAuthenticated","setAuth","regNotifHeight","setRegNotifHeight","modeToggleButtonWidth","setModeToggleButtonWidth","submitButtonWidth","setSubmitButtonWidth","loginMode","setLoginMode","email","setEmail","length","console","log","password","setPassword","rememberMe","setRememberMe","HandleEmail","e","target","value","HandlePassword","current","offsetHeight","offsetWidth","Validate","preventDefault","timestamp","Date","now","Promise","resolve","then","res","data","container","formContainer","formInputsContainer","transform","transition","opacity","marginLeft","float"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\nimport styles from \"../css/accessForm.module.css\"\n\nimport EmailValidator from \"../utils/emailValidator.js\"\n\nimport StoreRMDb from \"../utils/storeRMDb.js\"\nimport storeRMBrowser from \"../utils/storeRMBrowser.js\"\n\nimport Login from \"../utils/login.js\"\n\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\"\n\nexport default function AccessForm() {\n\n\tconst transitionDurationMs = 500\n\n\t/* References to some elements to get their dimensions */\n\tconst [\n\t\tregNotif,\n\t\tinputFields,\n\t\tmodeToggleButton,\n\t\tsubmitButton\n\t] = [...Array( 4 )].map( React.useRef )\n\n\t/*\n\tUsing Context to update hook state in RoutesV2.js\n\tto detect when user has successfully logged in\n\t*/\n\tconst { setAuthenticated } = useContext( AuthContext )\n\tconst setAuth = () => setAuthenticated( false )\n\n\t/* Hooks */\n\n\tconst [regNotifHeight, setRegNotifHeight] = useState( 0.0 )\n\tconst [modeToggleButtonWidth, setModeToggleButtonWidth] = useState( 0.0 )\n\tconst [submitButtonWidth, setSubmitButtonWidth] = useState( 0.0 )\n\n\t// Change between login and registration (modes)\n\tconst [loginMode, setLoginMode] = useState( -1 )\n\n\t// Store valid email address\n\tconst [email, setEmail] = useState( \"\" )\n\tuseEffect( () => {\n\t\temail.length > 0\n\t\t\t? console.log( \"Email address set to: \" + email )\n\t\t\t: console.log( \"Email address removed\" )\n\t}, [email] )\n\n\t// Store valid password\n\tconst [password, setPassword] = useState( \"\" )\n\n\tconst [rememberMe, setRememberMe] = useState( false )\n\n\n\t/* Form input handlers */\n\n\tconst HandleEmail = ( e ) => {\n\t\tconst email = e.target.value\n\n\t\tEmailValidator( email ) ?\n\t\t\tsetEmail( email ) :\n\t\t\tsetEmail( \"\" )\n\t}\n\n\tconst HandlePassword = ( e ) => {\n\t\tconst password = e.target.value\n\n\t\tconsole.log( \"Password length: \" + password.length )\n\n\t\tpassword.length >= 8 ? setPassword( password ) : setPassword( \"\" )\n\t}\n\n\t/*\n\tCode inside this useEffect will be executed on component mount\n\t*/\n\tuseEffect( () => {\n\n\t\tsetRegNotifHeight( regNotif.current.offsetHeight )\n\t\tsetModeToggleButtonWidth( modeToggleButton.current.offsetWidth )\n\t\tsetSubmitButtonWidth( submitButton.current.offsetWidth )\n\t\t// eslint-disable-next-line\n\t}, [] )\n\n\t/* Handle form submit */\n\n\tconst Validate = async ( e ) => {\n\n\t\te.preventDefault()\n\n\t\t// First value in multiplier chain is the amount of days\n\t\tconst timestamp = Date.now() + ( 7 * 24 * 60 * 60 * 1000 )\n\n\t\tnew Promise( resolve => {\n\t\t\tresolve( Login( email, password ) )\n\t\t} ).then( res => {\n\t\t\tres.data === 1 && new Promise( resolve => {\n\t\t\t\tresolve( StoreRMDb( email, timestamp ) )\n\t\t\t} ).then( res => {\n\t\t\t\tif ( res.data.length > 1 && res.data !== \"0\" ) {\n\t\t\t\t\tconsole.log( \"Cookie stored successfully into database\" )\n\t\t\t\t\tif ( storeRMBrowser( res.data ) ) {\n\t\t\t\t\t\tsetAuth( true )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\t}\n\n\treturn (\n\t\t< div className={styles.container} >\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form onSubmit={( e ) => Validate( e )}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={styles.formInputsContainer}\n\t\t\t\t\t\tref={inputFields}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttransform: ( loginMode !== -1 && ( loginMode ? `translateY(0px)` : `translateY(-${regNotifHeight - ( regNotifHeight * 0.75 )}px)` ) ),\n\t\t\t\t\t\t\t\ttransition: `${transitionDurationMs}ms ease-in-out 0s`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\tHandleEmail( e )\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\tHandlePassword( e )\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t</input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={styles.regNotif}\n\t\t\t\t\t\tref={regNotif}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\topacity: ( loginMode ? 0.01 : 1 )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\tPassword must be at least 8 characters long\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tref={submitButton}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\temail.length > 0 && password.length > 0 ? false : true\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={loginMode ? \"Login\" : \"Register\"}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmarginLeft: `${( ( modeToggleButtonWidth / 2 ) - ( submitButtonWidth / 2 ) )}px`,\n\t\t\t\t\t\t\t\ttransform: ( loginMode !== -1 && ( loginMode ? `translateY(0px)` : `translateY(${regNotifHeight}px)` ) ),\n\t\t\t\t\t\t\t\t// Specifying transform inside transition makes the animation\n\t\t\t\t\t\t\t\t// apply only to the transform attribute\n\t\t\t\t\t\t\t\t// https://stackoverflow.com/a/21323370/12314897\n\t\t\t\t\t\t\t\ttransition: `transform ${transitionDurationMs}ms ease-in-out 0s`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t</input>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tdefaultChecked={rememberMe}\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfloat: \"left\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tonChange={() => { setRememberMe( true ) }}\n\t\t\t\t/>\n\n\t\t\t\t<span>\n\t\t\t\t\tTest\n\t\t\t\t</span>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tclassName={styles.modeToggleButton}\n\t\t\t\tref={modeToggleButton}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tloginMode === -1 || loginMode === 1 ?\n\t\t\t\t\t\tsetLoginMode( 0 ) :\n\t\t\t\t\t\tsetLoginMode( 1 )\n\t\t\t\t}>\n\t\t\t\t{\n\t\t\t\t\tloginMode ?\n\t\t\t\t\t\t\"Don't have an account?\\nClick here to register\" :\n\t\t\t\t\t\t\"Already have an account?\\nClick here to login\"\n\t\t\t\t}\n\t\t\t</button>\n\t\t</div >\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}