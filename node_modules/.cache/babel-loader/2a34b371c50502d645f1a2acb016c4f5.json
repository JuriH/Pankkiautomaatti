{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/pages/access/js/AccessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport styles from \"../css/accessForm.module.css\";\nimport EmailValidator from \"./emailValidator.js\";\nimport StoreRMDb from \"./storeRMDb.js\";\nimport storeRMBrowser from \"./storeRMBrowser.js\";\nimport Login from \"./login.js\";\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\";\nimport { CSSTransition } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccessForm() {\n  _s();\n\n  /*\n  Using Context to update hook state in RoutesV2.js\n  to detect when user has successfully logged in\n  */\n  const {\n    setAuthenticated\n  } = useContext(AuthContext);\n\n  const setAuth = () => setAuthenticated(true);\n  /* Hooks */\n  // Store Registration (password) Notification element's height\n\n\n  const [regNotifHeight, setRegNotifHeight] = useState(0.0);\n  useEffect(() => {\n    setRegNotifHeight(document.querySelector(\"#regNotif\").getBoundingClientRect().height);\n    const inputs = document.querySelectorAll(\"input[name='email'], input[name='password']\");\n    inputs.forEach(input => {\n      input.style.top = input.offsetTop;\n    });\n  }, []); // Change between login and registration\n\n  const [loginMode, setLoginMode] = useState(true); // Store valid email address\n\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    email.length > 0 ? console.log(\"Email address set to: \" + email) : console.log(\"Email address removed\");\n  }, [email]); // Store valid password\n\n  const [password, setPassword] = useState(\"\");\n  /* Form input handlers */\n\n  const HandleEmail = e => {\n    const email = e.target.value;\n    EmailValidator(email) ? setEmail(email) : setEmail(\"\");\n  };\n\n  const HandlePassword = e => {\n    const password = e.target.value;\n    console.log(\"Password length: \" + password.length);\n    password.length >= 8 ? setPassword(password) : setPassword(\"\");\n  };\n  /*\n  Inline CSS styles for animating elements\n  when changing between login and registration\n  */\n\n\n  const movableFormInput = {\n    translat: `translateY(${regNotifHeight}px)`\n  };\n  const movableSubmitButton = {\n    transform: `translateY(-${regNotifHeight}px)`\n  };\n  /* Handle form submit */\n\n  const Validate = async e => {\n    e.preventDefault(); // First value in multiplier chain is the amount of days\n\n    const timestamp = Date.now() + 7 * 24 * 60 * 60 * 1000;\n    new Promise(resolve => {\n      resolve(Login(email, password));\n    }).then(res => {\n      res.data === 1 && new Promise(resolve => {\n        resolve(StoreRMDb(email, timestamp));\n      }).then(res => {\n        if (res.data.length > 1 && res.data !== \"0\") {\n          console.log(\"Cookie stored successfully into database\");\n\n          if (storeRMBrowser(res.data)) {\n            setAuth(true);\n          }\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(CSSTransition, {\n        in: loginMode,\n        appear: true,\n        timeout: 1000,\n        classNames: \"inputContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => Validate(e),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `inputContainer`,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              id: \"email\",\n              placeholder: \"Email\",\n              onChange: e => {\n                HandleEmail(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `inputContainer`,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              placeholder: \"Password\",\n              onChange: e => {\n                HandlePassword(e);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"regNotif\",\n            style: {\n              fontFamily: \"Open Sans Light\",\n              fontSize: \"12px\",\n              lineHeight: \"15px\",\n              textAlign: \"center\",\n              marginBottom: \"10px\",\n              visibility: loginMode ? \"hidden\" : \"visible\",\n              position: loginMode ? \"absolute\" : \"relative\"\n            },\n            children: \"Password must be at least 8 characters long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `inputContainer`,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"submit\",\n              disabled: email.length > 0 && password.length > 0 ? false : true,\n              value: loginMode ? \"Login\" : \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loginMode ? setLoginMode(false) : setLoginMode(true),\n      children: loginMode ? \"Don't have an account?\\nClick here to register\" : \"Already have an account?\\nClick here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AccessForm, \"seIhkCoVEPjLoPmhTL6S2r0mNB0=\");\n\n_c = AccessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessForm\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/js/AccessForm.js"],"names":["React","useEffect","useState","useContext","styles","EmailValidator","StoreRMDb","storeRMBrowser","Login","AuthContext","CSSTransition","AccessForm","setAuthenticated","setAuth","regNotifHeight","setRegNotifHeight","document","querySelector","getBoundingClientRect","height","inputs","querySelectorAll","forEach","input","style","top","offsetTop","loginMode","setLoginMode","email","setEmail","length","console","log","password","setPassword","HandleEmail","e","target","value","HandlePassword","movableFormInput","translat","movableSubmitButton","transform","Validate","preventDefault","timestamp","Date","now","Promise","resolve","then","res","data","container","formContainer","fontFamily","fontSize","lineHeight","textAlign","marginBottom","visibility","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\nimport styles from \"../css/accessForm.module.css\"\n\nimport EmailValidator from \"./emailValidator.js\"\n\nimport StoreRMDb from \"./storeRMDb.js\"\nimport storeRMBrowser from \"./storeRMBrowser.js\"\n\nimport Login from \"./login.js\"\n\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\"\n\nimport { CSSTransition } from 'react-transition-group';\n\nexport default function AccessForm() {\n\n\t/*\n\tUsing Context to update hook state in RoutesV2.js\n\tto detect when user has successfully logged in\n\t*/\n\tconst { setAuthenticated } = useContext( AuthContext )\n\tconst setAuth = () => setAuthenticated( true )\n\n\t/* Hooks */\n\n\t// Store Registration (password) Notification element's height\n\tconst [regNotifHeight, setRegNotifHeight] = useState( 0.0 )\n\n\tuseEffect( () => {\n\t\tsetRegNotifHeight( document.querySelector( \"#regNotif\" ).getBoundingClientRect().height )\n\n\t\tconst inputs = document.querySelectorAll( \"input[name='email'], input[name='password']\" )\n\t\tinputs.forEach( input => {\n\t\t\tinput.style.top = input.offsetTop\n\t\t} )\n\t}, [] )\n\n\t// Change between login and registration\n\tconst [loginMode, setLoginMode] = useState( true )\n\n\t// Store valid email address\n\tconst [email, setEmail] = useState( \"\" )\n\tuseEffect( () => {\n\t\temail.length > 0\n\t\t\t? console.log( \"Email address set to: \" + email )\n\t\t\t: console.log( \"Email address removed\" )\n\t}, [email] )\n\n\t// Store valid password\n\tconst [password, setPassword] = useState( \"\" )\n\n\n\t/* Form input handlers */\n\n\tconst HandleEmail = ( e ) => {\n\t\tconst email = e.target.value\n\n\t\tEmailValidator( email ) ?\n\t\t\tsetEmail( email ) :\n\t\t\tsetEmail( \"\" )\n\t}\n\n\tconst HandlePassword = ( e ) => {\n\t\tconst password = e.target.value\n\n\t\tconsole.log( \"Password length: \" + password.length )\n\n\t\tpassword.length >= 8 ? setPassword( password ) : setPassword( \"\" )\n\t}\n\n\t/*\n\tInline CSS styles for animating elements\n\twhen changing between login and registration\n\t*/\n\n\tconst movableFormInput = {\n\t\ttranslat: `translateY(${regNotifHeight}px)`\n\t}\n\n\tconst movableSubmitButton = {\n\t\ttransform: `translateY(-${regNotifHeight}px)`\n\t}\n\n\t/* Handle form submit */\n\n\tconst Validate = async ( e ) => {\n\n\t\te.preventDefault()\n\n\t\t// First value in multiplier chain is the amount of days\n\t\tconst timestamp = Date.now() + ( 7 * 24 * 60 * 60 * 1000 )\n\n\t\tnew Promise( resolve => {\n\t\t\tresolve( Login( email, password ) )\n\t\t} ).then( res => {\n\t\t\tres.data === 1 && new Promise( resolve => {\n\t\t\t\tresolve( StoreRMDb( email, timestamp ) )\n\t\t\t} ).then( res => {\n\t\t\t\tif ( res.data.length > 1 && res.data !== \"0\" ) {\n\t\t\t\t\tconsole.log( \"Cookie stored successfully into database\" )\n\t\t\t\t\tif ( storeRMBrowser( res.data ) ) {\n\t\t\t\t\t\tsetAuth( true )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\t}\n\n\treturn (\n\t\t< div className={styles.container} >\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<CSSTransition\n\t\t\t\t\tin={loginMode}\n\t\t\t\t\tappear={true}\n\t\t\t\t\ttimeout={1000}\n\t\t\t\t\tclassNames=\"inputContainer\">\n\t\t\t\t\t<form onSubmit={( e ) => Validate( e )}>\n\t\t\t\t\t\t<div className={`inputContainer`}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\t\tHandleEmail( e )\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={`inputContainer`}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\t\tHandlePassword( e )\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div id=\"regNotif\" style={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tfontFamily: \"Open Sans Light\",\n\t\t\t\t\t\t\t\tfontSize: \"12px\",\n\t\t\t\t\t\t\t\tlineHeight: \"15px\",\n\t\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t\t\t\tvisibility: ( loginMode ? \"hidden\" : \"visible\" ),\n\t\t\t\t\t\t\t\tposition: ( loginMode ? \"absolute\" : \"relative\" )\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\tPassword must be at least 8 characters long\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className={`inputContainer`}>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\t\temail.length > 0 && password.length > 0\n\t\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvalue={loginMode ? \"Login\" : \"Register\"}\n\t\t\t\t\t\t\t></input>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</CSSTransition>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tloginMode ?\n\t\t\t\t\t\tsetLoginMode( false ) :\n\t\t\t\t\t\tsetLoginMode( true )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{loginMode\n\t\t\t\t\t? \"Don't have an account?\\nClick here to register\"\n\t\t\t\t\t: \"Already have an account?\\nClick here to login\"}\n\t\t\t</button>\n\t\t</div >\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}