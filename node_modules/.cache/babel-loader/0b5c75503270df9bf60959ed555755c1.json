{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/js/RoutesV2.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Switch, Router, Route, Redirect } from 'react-router-dom';\nimport Splash from \"/home/ubuntu/dev/src/pages/splash/Splash.js\";\nimport Access from \"/home/ubuntu/dev/src/pages/access/js/Access.js\";\nimport Frontpage from \"/home/ubuntu/dev/src/pages/frontpage/js/Frontpage.js\";\nimport history from \"/home/ubuntu/dev/src/js/history.js\";\nimport CheckCookie from \"./checkCookie\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomRoutes() {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    CheckCookie() && setLoggedIn(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [\"( !loggedIn ?\", /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/access\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), \")\", /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/access\",\n        loggedIn: loggedIn,\n        setLoggedIn: () => setLoggedIn()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        path: \"/frontpage\",\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomRoutes, \"8ySMdZGY74HFzvXtK44+NjqgpXQ=\");\n\n_c = CustomRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomRoutes\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/js/RoutesV2.js"],"names":["React","useEffect","useState","Switch","Router","Route","Redirect","Splash","Access","Frontpage","history","CheckCookie","ProtectedRoute","CustomRoutes","loggedIn","setLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,QAAhC,QAAgD,kBAAhD;AAEA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AACA,OAAOC,SAAP,MAAsB,sDAAtB;AAEA,OAAOC,OAAP,MAAoB,oCAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAErC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAE,KAAF,CAAxC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACfU,IAAAA,WAAW,MAAMI,WAAW,CAAE,IAAF,CAA5B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEL,OAAjB;AAAA,2BACE,QAAC,MAAD;AAAA,+CAGI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAHJ,oBAKE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,SAArB;AAA+B,QAAA,QAAQ,EAAEI,QAAzC;AAAmD,QAAA,WAAW,EAAE,MAAMC,WAAW;AAAjF;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,YAArB;AAAkC,QAAA,QAAQ,EAAED;AAA5C;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApBuBD,Y;;KAAAA,Y","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Switch, Router, Route, Redirect } from 'react-router-dom'\n\nimport Splash from \"/home/ubuntu/dev/src/pages/splash/Splash.js\"\nimport Access from \"/home/ubuntu/dev/src/pages/access/js/Access.js\"\nimport Frontpage from \"/home/ubuntu/dev/src/pages/frontpage/js/Frontpage.js\"\n\nimport history from \"/home/ubuntu/dev/src/js/history.js\"\nimport CheckCookie from \"./checkCookie\"\nimport ProtectedRoute from \"./ProtectedRoute.js\"\n\nexport default function CustomRoutes() {\n\n  const [loggedIn, setLoggedIn] = useState( false )\n\n  useEffect( () => {\n    CheckCookie() && setLoggedIn( true )\n  }, [] )\n\n  return (\n    <Router history={history}>\n      <Switch>\n        (\n          !loggedIn ?\n          <Redirect to=\"/access\"/>\n        )\n        <ProtectedRoute path=\"/access\" loggedIn={loggedIn} setLoggedIn={() => setLoggedIn()} />\n        <ProtectedRoute path=\"/frontpage\" loggedIn={loggedIn} />\n      </Switch>\n    </Router>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}