{"ast":null,"code":"import Axios from \"axios\";\nimport Crypto from \".././crypto.js\";\n/*\nCode for this got from StackOverflow\nhttps://stackoverflow.com/a/15455623\n*/\n\nexport default function CreateCookie(email, timestamp) {\n  // // Generate random number to serve as key\n  // const randomNumber = Math.random( 99, 999999 )\n  // // Number to hexadecimal\n  // const token = randomNumber.toString( 16 )\n  // // Encrypt token\n  // const key = crypto.subtle.digest( 'SHA-1', token, randomNumber )\n  Axios({\n    method: \"post\",\n    url: \"http://www.paste.services/access/rememberMe\",\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    },\n    data: {\n      \"email\": email,\n      \"cookie\": timestamp\n    }\n  }).then(res => {\n    // Successfully logged in\n    if (res.data === \"1\") {\n      return {\n        \"success\": \"1\",\n        \"key\": key\n      };\n    }\n\n    console.log(\"Response: \" + res.data);\n  });\n}\n_c = CreateCookie;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCookie\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/storeCookieDb.js"],"names":["Axios","Crypto","CreateCookie","email","timestamp","method","url","headers","data","then","res","key","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AAEA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,CAAuBC,KAAvB,EAA8BC,SAA9B,EAA0C;AAErD;AACA;AAEA;AACA;AAEA;AACA;AAEAJ,EAAAA,KAAK,CAAE;AACHK,IAAAA,MAAM,EAAE,MADL;AAEHC,IAAAA,GAAG,EAAE,6CAFF;AAGHC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHN;AAMHC,IAAAA,IAAI,EAAE;AACF,eAASL,KADP;AAEF,gBAAUC;AAFR;AANH,GAAF,CAAL,CAUIK,IAVJ,CAUYC,GAAF,IAAW;AAEjB;AACA,QAAKA,GAAG,CAACF,IAAJ,KAAa,GAAlB,EAAwB;AACpB,aAAO;AACH,mBAAW,GADR;AAEH,eAAOG;AAFJ,OAAP;AAIH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAa,eAAeH,GAAG,CAACF,IAAhC;AACH,GApBD;AAqBH;KAhCuBN,Y","sourcesContent":["import Axios from \"axios\"\nimport Crypto from \".././crypto.js\"\n\n/*\nCode for this got from StackOverflow\nhttps://stackoverflow.com/a/15455623\n*/\n\nexport default function CreateCookie( email, timestamp ) {\n\n    // // Generate random number to serve as key\n    // const randomNumber = Math.random( 99, 999999 )\n\n    // // Number to hexadecimal\n    // const token = randomNumber.toString( 16 )\n\n    // // Encrypt token\n    // const key = crypto.subtle.digest( 'SHA-1', token, randomNumber )\n\n    Axios( {\n        method: \"post\",\n        url: \"http://www.paste.services/access/rememberMe\",\n        headers: {\n            'Content-Type': 'application/json; charset=UTF-8'\n        },\n        data: {\n            \"email\": email,\n            \"cookie\": timestamp\n        },\n    } ).then( ( res ) => {\n\n        // Successfully logged in\n        if ( res.data === \"1\" ) {\n            return {\n                \"success\": \"1\",\n                \"key\": key\n            }\n        }\n        console.log( \"Response: \" + res.data )\n    } )\n}"]},"metadata":{},"sourceType":"module"}