{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/pages/access/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./loginform.module.css\";\nimport EmailValidator from \"./EmailValidator.js\";\nimport LoginChecker from \"./CheckLogin.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  useEffect(() => {\n    const form = document.forms[0];\n    const emailAddress = form.querySelector('input[name=\"email\"]').value;\n    emailAddress.length > 0 & (() => {\n      setEmail(emailAddress);\n    });\n  }, []);\n  const [loginMode, setLoginMode] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    email.length > 0 ? console.log(\"Email address set to: \" + email) : console.log(\"Email address removed\");\n  }, [email]);\n  const [password, setPassword] = useState(\"\");\n\n  const HandleEmail = e => {\n    const email = e.target.value;\n    EmailValidator(email) && setEmail(email);\n  };\n\n  const HandlePassword = e => {\n    const password = e.target.value;\n    console.log(\"Password length: \" + password.length);\n    password.length >= 8 ? setPassword(password) : setPassword(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        method: \"post\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          onChange: e => {\n            HandleEmail(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          onChange: e => {\n            HandlePassword(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          disabled: email.length > 0 && password.length > 0 ? false : true,\n          value: loginMode ? \"Login\" : \"Register\",\n          onClick: () => LoginChecker(email, password).then(response => console.log(\"Response: \" + response))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loginMode ? setLoginMode(false) : setLoginMode(true),\n      children: loginMode ? \"Don't have an account?\\nClick here to register\" : \"Already have an account?\\nClick here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n}\n\n_s(LoginForm, \"ikQY0xsWpEHlDJXmjM59+wMrBrs=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/LoginForm.js"],"names":["React","useEffect","useState","styles","EmailValidator","LoginChecker","LoginForm","form","document","forms","emailAddress","querySelector","value","length","setEmail","loginMode","setLoginMode","email","console","log","password","setPassword","HandleEmail","e","target","HandlePassword","container","formContainer","then","response"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport styles from \"./loginform.module.css\"\nimport EmailValidator from \"./EmailValidator.js\"\nimport LoginChecker from \"./CheckLogin.js\"\n\nexport default function LoginForm() {\n\tuseEffect(() => {\n\t\tconst form = document.forms[0]\n\t\tconst emailAddress = form.querySelector('input[name=\"email\"]').value\n\n\t\t;(emailAddress.length > 0) &\n\t\t\t(() => {\n\t\t\t\tsetEmail(emailAddress)\n\t\t\t})\n\t}, [])\n\n\tconst [loginMode, setLoginMode] = useState(true)\n\tconst [email, setEmail] = useState(\"\")\n\tuseEffect(() => {\n\t\temail.length > 0\n\t\t\t? console.log(\"Email address set to: \" + email)\n\t\t\t: console.log(\"Email address removed\")\n\t}, [email])\n\n\tconst [password, setPassword] = useState(\"\")\n\n\tconst HandleEmail = (e) => {\n\t\tconst email = e.target.value\n\n\t\tEmailValidator(email) && setEmail(email)\n\t}\n\n\tconst HandlePassword = (e) => {\n\t\tconst password = e.target.value\n\n\t\tconsole.log(\"Password length: \" + password.length)\n\n\t\tpassword.length >= 8 ? setPassword(password) : setPassword(\"\")\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form action=\"\" method=\"post\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tHandleEmail(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t></input>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tHandlePassword(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t></input>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\temail.length > 0 && password.length > 0\n\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={loginMode ? \"Login\" : \"Register\"}\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tLoginChecker(email, password).then((response) =>\n\t\t\t\t\t\t\t\tconsole.log(\"Response: \" + response)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t></input>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tloginMode ? setLoginMode(false) : setLoginMode(true)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{loginMode\n\t\t\t\t\t? \"Don't have an account?\\nClick here to register\"\n\t\t\t\t\t: \"Already have an account?\\nClick here to login\"}\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}