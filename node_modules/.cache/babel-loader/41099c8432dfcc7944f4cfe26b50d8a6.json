{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/pages/access/js/AccessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport styles from \"../css/accessForm.module.css\";\nimport EmailValidator from \"./emailValidator.js\";\nimport StoreRMDb from \"./storeRMDb.js\";\nimport storeRMBrowser from \"./storeRMBrowser.js\";\nimport Login from \"./login.js\";\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccessForm() {\n  _s();\n\n  const [inputs, storeInputs] = useState([]);\n  useEffect(() => {\n    inputs.length > 0 && console.log(\"Inputs: \" + inputs.length);\n  }, [inputs]);\n  /* Executed on component mount */\n\n  useEffect(() => {\n    (() => {\n      storeInputs(document.querySelectorAll('.inputContainer'));\n    })();\n\n    inputs.forEach(input => {\n      let offsetTop = input.offsetTop;\n      console.log(\"OFFSET TOP: \" + offsetTop);\n      input.style.top = offsetTop;\n      console.log(\"Input's top: \" + input.style.top);\n    }); // eslint-disable-next-line\n  }, []);\n  const {\n    setAuthenticated\n  } = useContext(AuthContext);\n\n  const setAuth = () => setAuthenticated(true);\n  /* States */\n\n\n  const [loginMode, setLoginMode] = useState(true);\n  useEffect(() => {\n    (() => {\n      console.log(\"Amount of selected Inputs: \" + inputs.length);\n      inputs.forEach(input => {\n        input.style.top = `${input.offsetTop}px`;\n        console.log(\"Input's top: \" + input.style.top);\n      });\n    })();\n  }, [loginMode, inputs]);\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    email.length > 0 ? console.log(\"Email address set to: \" + email) : console.log(\"Email address removed\");\n  }, [email]);\n  const [password, setPassword] = useState(\"\");\n  /* Input value checkers */\n\n  const HandleEmail = e => {\n    const email = e.target.value;\n    EmailValidator(email) ? setEmail(email) : setEmail(\"\");\n  };\n\n  const HandlePassword = e => {\n    const password = e.target.value;\n    console.log(\"Password length: \" + password.length);\n    password.length >= 8 ? setPassword(password) : setPassword(\"\");\n  };\n  /* Form submit handler */\n\n\n  const Validate = async e => {\n    e.preventDefault(); // First value in multiplier chain is the amount of days\n\n    const timestamp = Date.now() + 7 * 24 * 60 * 60 * 1000;\n    new Promise(resolve => {\n      resolve(Login(email, password));\n    }).then(res => {\n      res.data === 1 && new Promise(resolve => {\n        resolve(StoreRMDb(email, timestamp));\n      }).then(res => {\n        if (res.data.length > 1 && res.data !== \"0\") {\n          console.log(\"Cookie stored successfully into database\");\n\n          if (storeRMBrowser(res.data)) {\n            setAuth(true);\n          }\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => Validate(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            onChange: e => {\n              HandleEmail(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            onChange: e => {\n              HandlePassword(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"regNotif\",\n          style: {\n            fontFamily: \"Open Sans Light\",\n            fontSize: \"12px\",\n            lineHeight: \"15px\",\n            textAlign: \"center\",\n            marginBottom: \"10px\",\n            visibility: loginMode ? \"hidden\" : \"visible\",\n            position: loginMode ? \"absolute\" : \"relative\"\n          },\n          children: \"Password must be at least 8 characters long\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"inputContainer\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            disabled: email.length > 0 && password.length > 0 ? false : true,\n            value: loginMode ? \"Login\" : \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loginMode ? setLoginMode(false) : setLoginMode(true),\n      children: loginMode ? \"Don't have an account?\\nClick here to register\" : \"Already have an account?\\nClick here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AccessForm, \"hMmKgsBPOFAa1Y/ZJu3IMGLztyw=\");\n\n_c = AccessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessForm\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/js/AccessForm.js"],"names":["React","useEffect","useState","useContext","styles","EmailValidator","StoreRMDb","storeRMBrowser","Login","AuthContext","AccessForm","inputs","storeInputs","length","console","log","document","querySelectorAll","forEach","input","offsetTop","style","top","setAuthenticated","setAuth","loginMode","setLoginMode","email","setEmail","password","setPassword","HandleEmail","e","target","value","HandlePassword","Validate","preventDefault","timestamp","Date","now","Promise","resolve","then","res","data","container","formContainer","fontFamily","fontSize","lineHeight","textAlign","marginBottom","visibility","position"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\nimport styles from \"../css/accessForm.module.css\"\n\nimport EmailValidator from \"./emailValidator.js\"\n\nimport StoreRMDb from \"./storeRMDb.js\"\nimport storeRMBrowser from \"./storeRMBrowser.js\"\n\nimport Login from \"./login.js\"\n\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\"\n\nexport default function AccessForm() {\n\n\tconst [inputs, storeInputs] = useState( [] )\n\tuseEffect( () => {\n\t\tinputs.length > 0 &&\n\t\t\tconsole.log(\"Inputs: \" + inputs.length)\n\t}, [inputs] )\n\n\t/* Executed on component mount */\n\tuseEffect( () => {\n\t\t( () => {\n\t\t\tstoreInputs(document.querySelectorAll('.inputContainer'))\n\t\t})()\n\t\t\n\t\tinputs.forEach( input => {\n\t\t\tlet offsetTop = input.offsetTop\n\t\t\tconsole.log(\"OFFSET TOP: \" + offsetTop)\n\t\t\tinput.style.top = offsetTop\n\t\t\tconsole.log( \"Input's top: \" + input.style.top )\n\t\t} )\n\t\t// eslint-disable-next-line\n\t}, [] )\n\n\tconst { setAuthenticated } = useContext( AuthContext )\n\tconst setAuth = () => setAuthenticated( true )\n\n\t/* States */\n\n\tconst [loginMode, setLoginMode] = useState( true )\n\tuseEffect( () => {\n\t\t( () => {\n\t\t\tconsole.log( \"Amount of selected Inputs: \" + inputs.length )\n\t\t\tinputs.forEach( input => {\n\t\t\t\tinput.style.top = `${input.offsetTop}px`\n\t\t\t\tconsole.log( \"Input's top: \" + input.style.top )\n\t\t\t} )\n\t\t} )()\n\t}, [loginMode, inputs] )\n\n\tconst [email, setEmail] = useState( \"\" )\n\tuseEffect( () => {\n\t\temail.length > 0\n\t\t\t? console.log( \"Email address set to: \" + email )\n\t\t\t: console.log( \"Email address removed\" )\n\t}, [email] )\n\n\tconst [password, setPassword] = useState( \"\" )\n\n\t/* Input value checkers */\n\n\tconst HandleEmail = ( e ) => {\n\t\tconst email = e.target.value\n\n\t\tEmailValidator( email ) ?\n\t\t\tsetEmail( email ) :\n\t\t\tsetEmail( \"\" )\n\t}\n\n\tconst HandlePassword = ( e ) => {\n\t\tconst password = e.target.value\n\n\t\tconsole.log( \"Password length: \" + password.length )\n\n\t\tpassword.length >= 8 ? setPassword( password ) : setPassword( \"\" )\n\t}\n\n\t/* Form submit handler */\n\n\tconst Validate = async ( e ) => {\n\n\t\te.preventDefault()\n\n\t\t// First value in multiplier chain is the amount of days\n\t\tconst timestamp = Date.now() + ( 7 * 24 * 60 * 60 * 1000 )\n\n\t\tnew Promise( resolve => {\n\t\t\tresolve( Login( email, password ) )\n\t\t} ).then( res => {\n\t\t\tres.data === 1 && new Promise( resolve => {\n\t\t\t\tresolve( StoreRMDb( email, timestamp ) )\n\t\t\t} ).then( res => {\n\t\t\t\tif ( res.data.length > 1 && res.data !== \"0\" ) {\n\t\t\t\t\tconsole.log( \"Cookie stored successfully into database\" )\n\t\t\t\t\tif ( storeRMBrowser( res.data ) ) {\n\t\t\t\t\t\tsetAuth( true )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\t}\n\n\treturn (\n\t\t< div className={styles.container} >\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form onSubmit={( e ) => Validate( e )}>\n\t\t\t\t\t<div className=\"inputContainer\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\tHandleEmail( e )\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"inputContainer\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\tHandlePassword( e )\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"regNotif\" style={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfontFamily: \"Open Sans Light\",\n\t\t\t\t\t\t\tfontSize: \"12px\",\n\t\t\t\t\t\t\tlineHeight: \"15px\",\n\t\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\t\tmarginBottom: \"10px\",\n\t\t\t\t\t\t\tvisibility: ( loginMode ? \"hidden\" : \"visible\" ),\n\t\t\t\t\t\t\tposition: ( loginMode ? \"absolute\" : \"relative\" )\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tPassword must be at least 8 characters long\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div class=\"inputContainer\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\temail.length > 0 && password.length > 0\n\t\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue={loginMode ? \"Login\" : \"Register\"}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tloginMode ? setLoginMode( false ) : setLoginMode( true )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{loginMode\n\t\t\t\t\t? \"Don't have an account?\\nClick here to register\"\n\t\t\t\t\t: \"Already have an account?\\nClick here to login\"}\n\t\t\t</button>\n\t\t</div >\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}