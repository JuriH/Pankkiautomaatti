{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/pages/access/AccessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"./accessForm.module.css\";\nimport EmailValidator from \"../EmailValidator.js\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccessForm() {\n  _s();\n\n  const [loginMode, setLoginMode] = useState(true);\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    email.length > 0 ? console.log(\"Email address set to: \" + email) : console.log(\"Email address removed\");\n  }, [email]);\n  const [password, setPassword] = useState(\"\");\n\n  const HandleEmail = e => {\n    const email = e.target.value;\n    EmailValidator(email) && setEmail(email);\n  };\n\n  const HandlePassword = e => {\n    const password = e.target.value;\n    console.log(\"Password length: \" + password.length);\n    password.length >= 8 ? setPassword(password) : setPassword(\"\");\n  };\n\n  const Validate = e => {\n    e.preventDefault();\n    Axios({\n      method: \"post\",\n      url: \"http://www.paste.services/login/check\",\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8'\n      },\n      data: {\n        \"email\": email,\n        \"password\": password\n      }\n    }).then(res => {\n      if (res.data == \"OK\") {// Create cookie\n      }\n\n      console.log(\"Response: \" + res.data);\n    });\n  };\n\n  const CreateCookie = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => Validate(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          onChange: e => {\n            HandleEmail(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          onChange: e => {\n            HandlePassword(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          disabled: email.length > 0 && password.length > 0 ? false : true,\n          value: loginMode ? \"Login\" : \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => loginMode ? setLoginMode(false) : setLoginMode(true),\n      children: loginMode ? \"Don't have an account?\\nClick here to register\" : \"Already have an account?\\nClick here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AccessForm, \"+PPitAFvEa68m7AT7pkJ7W0KwVY=\");\n\n_c = AccessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessForm\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/AccessForm.js"],"names":["React","useEffect","useState","styles","EmailValidator","Axios","AccessForm","loginMode","setLoginMode","email","setEmail","length","console","log","password","setPassword","HandleEmail","e","target","value","HandlePassword","Validate","preventDefault","method","url","headers","data","then","res","CreateCookie","container","formContainer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport styles from \"./accessForm.module.css\"\nimport EmailValidator from \"../EmailValidator.js\"\nimport Axios from \"axios\"\n\nexport default function AccessForm() {\n\n\tconst [loginMode, setLoginMode] = useState(true)\n\tconst [email, setEmail] = useState(\"\")\n\tuseEffect(() => {\n\t\temail.length > 0\n\t\t\t? console.log(\"Email address set to: \" + email)\n\t\t\t: console.log(\"Email address removed\")\n\t}, [email])\n\n\tconst [password, setPassword] = useState(\"\")\n\n\tconst HandleEmail = (e) => {\n\t\tconst email = e.target.value\n\n\t\tEmailValidator(email) && setEmail(email)\n\t}\n\n\tconst HandlePassword = (e) => {\n\t\tconst password = e.target.value\n\n\t\tconsole.log(\"Password length: \" + password.length)\n\n\t\tpassword.length >= 8 ? setPassword(password) : setPassword(\"\")\n\t}\n\n\tconst Validate = ( e ) => {\n\t\t\n\t\te.preventDefault()\n\n\t\tAxios({\n\t\t\tmethod: \"post\",\n\t\t\turl: \"http://www.paste.services/login/check\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type' : 'application/json; charset=UTF-8'\n\t\t\t},\n\t\t\tdata: {\n\t\t\t\t\"email\": email,\n\t\t\t\t\"password\": password,\n\t\t\t},\n\t\t} ).then( ( res ) => {\n\t\t\tif ( res.data == \"OK\" ) {\n\t\t\t\t// Create cookie\n\t\t\t}\n\t\t\tconsole.log(\"Response: \" + res.data)\n\t\t})\n\t}\n\n\tconst CreateCookie = () => {\n\t}\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form onSubmit={(e) => Validate(e)}>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tHandleEmail(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t></input>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tHandlePassword(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t></input>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\temail.length > 0 && password.length > 0\n\t\t\t\t\t\t\t\t? false\n\t\t\t\t\t\t\t\t: true\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={loginMode ? \"Login\" : \"Register\"}\n\t\t\t\t\t></input>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tloginMode ? setLoginMode(false) : setLoginMode(true)\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t{loginMode\n\t\t\t\t\t? \"Don't have an account?\\nClick here to register\"\n\t\t\t\t\t: \"Already have an account?\\nClick here to login\"}\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}