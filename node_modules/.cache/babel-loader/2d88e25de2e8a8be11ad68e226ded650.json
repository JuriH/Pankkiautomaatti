{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/pages/access/js/AccessForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport styles from \"../css/accessForm.module.css\";\nimport EmailValidator from \"../utils/emailValidator.js\";\nimport StoreRMDb from \"../utils/storeRMDb.js\";\nimport storeRMBrowser from \"../utils/storeRMBrowser.js\";\nimport Login from \"../utils/login.js\";\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AccessForm() {\n  _s();\n\n  const transitionDurationMs = 500;\n  const submitButtonText = [\"Login\", \"Register\"];\n  /* References to some elements to get their dimensions */\n\n  const [regNotif, inputFields, submitButton] = [...Array(3)].map(React.useRef);\n  /*\n  Using Context to update hook state in RoutesV2.js\n  to detect when user has successfully logged in\n  */\n\n  const {\n    setAuthenticated\n  } = useContext(AuthContext);\n\n  const setAuth = () => setAuthenticated(false);\n  /* Hooks */\n\n\n  const [inputFieldsContainerDimensions, setinputFieldsContainerDimensions] = useState({\n    width: 0.0,\n    top: 0.0\n  });\n  const [regNotifHeight, setRegNotifHeight] = useState(0.0);\n  useEffect(() => {\n    console.log(\"Reg height: \" + regNotifHeight);\n  }, [regNotifHeight]); // Change between login and registration (modes)\n\n  const [loginMode, setLoginMode] = useState(-1); // Store valid email address\n\n  const [email, setEmail] = useState(\"\");\n  useEffect(() => {\n    email.length > 0 ? console.log(\"Email address set to: \" + email) : console.log(\"Email address removed\");\n  }, [email]); // Store valid password\n\n  const [password, setPassword] = useState(\"\");\n  const [rememberMe, setRememberMe] = useState(false);\n  /* Form input handlers */\n\n  const HandleEmail = e => {\n    const email = e.target.value;\n    EmailValidator(email) ? setEmail(email) : setEmail(\"\");\n  };\n\n  const HandlePassword = e => {\n    const password = e.target.value;\n    console.log(\"Password length: \" + password.length);\n    password.length >= 8 ? setPassword(password) : setPassword(\"\");\n  };\n  /*\n  Code inside this useEffect will be executed on component mount\n  */\n\n\n  useEffect(() => {\n    updateRegNotifHook();\n    setinputFieldsContainerDimensions({\n      width: inputFields.current.offsetWidth,\n      top: inputFields.current.getBoundingClientRect().top + inputFields.current.offsetHeight - 5\n    }); // eslint-disable-next-line\n  }, []);\n\n  const updateRegNotifHook = () => {\n    setInterval(() => {\n      if (regNotif.current.offsetHeight !== undefined) {\n        setRegNotifHeight(regNotif.current.offsetHeight);\n      }\n    }, 100); // check every 100ms\n  };\n  /* Handle form submit */\n\n\n  const Validate = async e => {\n    e.preventDefault(); // First value in multiplier chain is the amount of days\n\n    const timestamp = Date.now() + 7 * 24 * 60 * 60 * 1000;\n    new Promise(resolve => {\n      resolve(Login(email, password));\n    }).then(res => {\n      res.data === 1 && new Promise(resolve => {\n        resolve(StoreRMDb(email, timestamp));\n      }).then(res => {\n        if (res.data.length > 1 && res.data !== \"0\") {\n          console.log(\"Cookie stored successfully into database\");\n\n          if (storeRMBrowser(res.data)) {\n            setAuth(true);\n          }\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => Validate(e),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formInputsContainer,\n          ref: inputFields,\n          style: {\n            transform: loginMode !== -1 && (loginMode ? `translateY(0px)` : `translateY(-${{\n              regNotifHeight\n            } / 2}px)`),\n            transition: `${transitionDurationMs}ms ease-in-out 0s`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            placeholder: \"Email\",\n            onChange: e => {\n              HandleEmail(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Password\",\n            onChange: e => {\n              HandlePassword(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          ref: submitButton,\n          disabled: email.length > 0 && password.length > 0 ? false : true,\n          value: loginMode !== -1 && submitButtonText[loginMode],\n          style: {\n            margin: \"10px auto 10px auto\",\n            width: `${loginMode !== -1 && (loginMode || !loginMode) && `${submitButton.style.width = submitButton.textContent}`}`,\n            transform: loginMode !== -1 && (loginMode ? `translateY(0px)` : `translateY(${regNotifHeight / 2}px)`),\n            // Specifying transform inside transition makes the animation\n            // apply only to the transform attribute\n            // https://stackoverflow.com/a/21323370/12314897\n            transitionProperty: \"transform, max-width, min-width\",\n            transition: `transform ${transitionDurationMs}ms`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: regNotif,\n      style: {\n        position: \"absolute\",\n        top: `${inputFieldsContainerDimensions.top}px`,\n        fontSize: \"11px\",\n        textAlign: \"center\",\n        width: `${inputFieldsContainerDimensions.width}px`,\n        opacity: loginMode ? 0.01 : 1,\n        transition: `opacity ${transitionDurationMs / 2}ms ease-in-out ${loginMode ? \"0s\" : \"250ms\"}`\n      },\n      children: \"Password must be at least 8 characters long\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.checkBoxContainer,\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: rememberMe,\n          onChange: () => {\n            setRememberMe(rememberMe ? false : true);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Keep me logged in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.modeToggleButton,\n      onClick: () => loginMode === -1 || loginMode === 1 ? setLoginMode(0) : setLoginMode(1),\n      children: loginMode ? \"Don't have an account?\\nClick here to register\" : \"Already have an account?\\nClick here to login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AccessForm, \"ODkriE6BaSJaua9RHkJmKx0J/zs=\");\n\n_c = AccessForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessForm\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/pages/access/js/AccessForm.js"],"names":["React","useEffect","useState","useContext","styles","EmailValidator","StoreRMDb","storeRMBrowser","Login","AuthContext","AccessForm","transitionDurationMs","submitButtonText","regNotif","inputFields","submitButton","Array","map","useRef","setAuthenticated","setAuth","inputFieldsContainerDimensions","setinputFieldsContainerDimensions","width","top","regNotifHeight","setRegNotifHeight","console","log","loginMode","setLoginMode","email","setEmail","length","password","setPassword","rememberMe","setRememberMe","HandleEmail","e","target","value","HandlePassword","updateRegNotifHook","current","offsetWidth","getBoundingClientRect","offsetHeight","setInterval","undefined","Validate","preventDefault","timestamp","Date","now","Promise","resolve","then","res","data","container","formContainer","formInputsContainer","transform","transition","margin","style","textContent","transitionProperty","position","fontSize","textAlign","opacity","checkBoxContainer","modeToggleButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\nimport styles from \"../css/accessForm.module.css\"\n\nimport EmailValidator from \"../utils/emailValidator.js\"\n\nimport StoreRMDb from \"../utils/storeRMDb.js\"\nimport storeRMBrowser from \"../utils/storeRMBrowser.js\"\n\nimport Login from \"../utils/login.js\"\n\nimport AuthContext from \"/home/ubuntu/dev/src/js/AuthContext.js\"\n\nexport default function AccessForm() {\n\n\tconst transitionDurationMs = 500\n\tconst submitButtonText = [\n\t\t\"Login\",\n\t\t\"Register\"\n\t]\n\n\t/* References to some elements to get their dimensions */\n\tconst [\n\t\tregNotif,\n\t\tinputFields,\n\t\tsubmitButton\n\t] = [...Array( 3 )].map( React.useRef )\n\n\t/*\n\tUsing Context to update hook state in RoutesV2.js\n\tto detect when user has successfully logged in\n\t*/\n\tconst { setAuthenticated } = useContext( AuthContext )\n\tconst setAuth = () => setAuthenticated( false )\n\n\t/* Hooks */\n\n\tconst [\n\t\tinputFieldsContainerDimensions,\n\t\tsetinputFieldsContainerDimensions\n\t] = useState(\n\t\t{\n\t\t\twidth: 0.0,\n\t\t\ttop: 0.0\n\t\t}\n\t)\n\n\tconst [regNotifHeight, setRegNotifHeight] = useState( 0.0 )\n\tuseEffect( () => {\n\t\tconsole.log( \"Reg height: \" + regNotifHeight )\n\t}, [regNotifHeight] )\n\n\t// Change between login and registration (modes)\n\tconst [loginMode, setLoginMode] = useState( -1 )\n\n\t// Store valid email address\n\tconst [email, setEmail] = useState( \"\" )\n\tuseEffect( () => {\n\t\temail.length > 0\n\t\t\t? console.log( \"Email address set to: \" + email )\n\t\t\t: console.log( \"Email address removed\" )\n\t}, [email] )\n\n\t// Store valid password\n\tconst [password, setPassword] = useState( \"\" )\n\n\tconst [rememberMe, setRememberMe] = useState( false )\n\n\n\t/* Form input handlers */\n\n\tconst HandleEmail = ( e ) => {\n\t\tconst email = e.target.value\n\n\t\tEmailValidator( email ) ?\n\t\t\tsetEmail( email ) :\n\t\t\tsetEmail( \"\" )\n\t}\n\n\tconst HandlePassword = ( e ) => {\n\t\tconst password = e.target.value\n\n\t\tconsole.log( \"Password length: \" + password.length )\n\n\t\tpassword.length >= 8 ? setPassword( password ) : setPassword( \"\" )\n\t}\n\n\t/*\n\tCode inside this useEffect will be executed on component mount\n\t*/\n\tuseEffect( () => {\n\n\t\tupdateRegNotifHook()\n\n\t\tsetinputFieldsContainerDimensions(\n\t\t\t{\n\t\t\t\twidth: inputFields.current.offsetWidth,\n\t\t\t\ttop: ( inputFields.current.getBoundingClientRect().top + inputFields.current.offsetHeight ) - 5\n\t\t\t}\n\t\t)\n\t\t// eslint-disable-next-line\n\t}, [] )\n\n\tconst updateRegNotifHook = () => {\n\t\tsetInterval( () => {\n\t\t\tif ( regNotif.current.offsetHeight !== undefined ) {\n\t\t\t\tsetRegNotifHeight( regNotif.current.offsetHeight )\n\t\t\t}\n\t\t}, 100 ); // check every 100ms\n\t}\n\n\t/* Handle form submit */\n\n\tconst Validate = async ( e ) => {\n\n\t\te.preventDefault()\n\n\t\t// First value in multiplier chain is the amount of days\n\t\tconst timestamp = Date.now() + ( 7 * 24 * 60 * 60 * 1000 )\n\n\t\tnew Promise( resolve => {\n\t\t\tresolve( Login( email, password ) )\n\t\t} ).then( res => {\n\t\t\tres.data === 1 && new Promise( resolve => {\n\t\t\t\tresolve( StoreRMDb( email, timestamp ) )\n\t\t\t} ).then( res => {\n\t\t\t\tif ( res.data.length > 1 && res.data !== \"0\" ) {\n\t\t\t\t\tconsole.log( \"Cookie stored successfully into database\" )\n\t\t\t\t\tif ( storeRMBrowser( res.data ) ) {\n\t\t\t\t\t\tsetAuth( true )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t} )\n\t}\n\n\treturn (\n\t\t< div className={styles.container} >\n\t\t\t<div className={styles.formContainer}>\n\t\t\t\t<form onSubmit={( e ) => Validate( e )}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={styles.formInputsContainer}\n\t\t\t\t\t\tref={inputFields}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttransform: ( loginMode !== -1 && ( loginMode ? `translateY(0px)` : `translateY(-${{ regNotifHeight } / 2}px)` ) ),\n\t\t\t\t\t\t\t\ttransition: `${transitionDurationMs}ms ease-in-out 0s`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\tHandleEmail( e )\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tonChange={( e ) => {\n\t\t\t\t\t\t\t\tHandlePassword( e )\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t</input>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tref={submitButton}\n\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\temail.length > 0 && password.length > 0 ? false : true\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={loginMode !== -1 && (submitButtonText[loginMode])}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmargin: \"10px auto 10px auto\",\n\t\t\t\t\t\t\t\twidth: `${loginMode !== -1 && ((loginMode || !loginMode) && `${submitButton.style.width = submitButton.textContent}` )}`,\n\t\t\t\t\t\t\t\ttransform: ( loginMode !== -1 && ( loginMode ? `translateY(0px)` : `translateY(${regNotifHeight / 2}px)` ) ),\n\t\t\t\t\t\t\t\t// Specifying transform inside transition makes the animation\n\t\t\t\t\t\t\t\t// apply only to the transform attribute\n\t\t\t\t\t\t\t\t// https://stackoverflow.com/a/21323370/12314897\n\t\t\t\t\t\t\t\ttransitionProperty: \"transform, max-width, min-width\",\n\t\t\t\t\t\t\t\ttransition: `transform ${transitionDurationMs}ms`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}>\n\t\t\t\t\t</input>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t\t<div\n\t\t\t\tref={regNotif}\n\t\t\t\tstyle={\n\t\t\t\t\t{\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: `${inputFieldsContainerDimensions.top}px`,\n\t\t\t\t\t\tfontSize: \"11px\",\n\t\t\t\t\t\ttextAlign: \"center\",\n\t\t\t\t\t\twidth: `${inputFieldsContainerDimensions.width}px`,\n\t\t\t\t\t\topacity: ( loginMode ? 0.01 : 1 ),\n\t\t\t\t\t\ttransition: `opacity ${transitionDurationMs / 2}ms ease-in-out ${loginMode ? \"0s\" : \"250ms\"}`\n\t\t\t\t\t}\n\t\t\t\t}>\n\t\t\t\tPassword must be at least 8 characters long\n\t\t\t</div>\n\n\t\t\t<div className={styles.checkBoxContainer}>\n\t\t\t\t<label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tdefaultChecked={rememberMe}\n\t\t\t\t\t\tonChange={() => { setRememberMe( rememberMe ? false : true ) }}\n\t\t\t\t\t/>\n\t\t\t\t\t<span>\n\t\t\t\t\t\tKeep me logged in\n\t\t\t\t\t\t</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<button\n\t\t\t\tclassName={styles.modeToggleButton}\n\t\t\t\tonClick={() =>\n\t\t\t\t\tloginMode === -1 || loginMode === 1 ?\n\t\t\t\t\t\tsetLoginMode( 0 ) :\n\t\t\t\t\t\tsetLoginMode( 1 )\n\t\t\t\t}>\n\t\t\t\t{\n\t\t\t\t\tloginMode ?\n\t\t\t\t\t\t\"Don't have an account?\\nClick here to register\" :\n\t\t\t\t\t\t\"Already have an account?\\nClick here to login\"\n\t\t\t\t}\n\t\t\t</button>\n\t\t</div >\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}