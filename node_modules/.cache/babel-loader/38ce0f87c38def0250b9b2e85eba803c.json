{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu/dev/src/js/ProtectedRoute.js\";\nimport { Redirect, Route } from \"react-router\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authenticated(props) {\n  const RenderSwitch = () => {\n    switch (props.path) {\n      case \"/\":\n        if (props.loggedIn) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/frontpage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 30\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 30\n          }, this);\n        }\n\n      case \"/access\":\n        if (props.loggedIn) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/frontpage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 30\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 30\n          }, this);\n        }\n\n      case \"/frontpage\":\n        if (props.loggedIn) {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/frontpage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 30\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            path: \"/access\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 30\n          }, this);\n        }\n\n      default:\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/access\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this);\n    }\n  };\n\n  RenderSwitch();\n}\n_c = Authenticated;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticated\");","map":{"version":3,"sources":["/home/ubuntu/dev/src/js/ProtectedRoute.js"],"names":["Redirect","Route","useHistory","Authenticated","props","RenderSwitch","path","loggedIn"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,eAAe,SAASC,aAAT,CAAwBC,KAAxB,EAAgC;AAE3C,QAAMC,YAAY,GAAG,MAAM;AACvB,YAASD,KAAK,CAACE,IAAf;AACI,WAAO,GAAP;AACI,YAAKF,KAAK,CAACG,QAAX,EAAsB;AAClB,8BAAS,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH,SAFD,MAEO;AACH,8BAAS,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH;;AAEL,WAAO,SAAP;AACI,YAAKH,KAAK,CAACG,QAAX,EAAsB;AAClB,8BAAS,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH,SAFD,MAEO;AACH,8BAAS,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH;;AAEL,WAAO,YAAP;AACI,YAAKH,KAAK,CAACG,QAAX,EAAsB;AAClB,8BAAS,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH,SAFD,MAEO;AACH,8BAAS,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,kBAAT;AACH;;AAEL;AACI,4BAAS,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAT;AAvBR;AAyBH,GA1BD;;AA4BAF,EAAAA,YAAY;AACf;KA/BuBF,a","sourcesContent":["import { Redirect, Route } from \"react-router\";\nimport { useHistory } from \"react-router\";\n\nexport default function Authenticated( props ) {\n\n    const RenderSwitch = () => {\n        switch ( props.path ) {\n            case ( \"/\" ):\n                if ( props.loggedIn ) {\n                    return ( <Redirect to=\"/frontpage\" /> )\n                } else {\n                    return ( <Route path=\"/\" /> )\n                }\n\n            case ( \"/access\" ):\n                if ( props.loggedIn ) {\n                    return ( <Redirect to=\"/frontpage\" /> )\n                } else {\n                    return ( <Route path=\"/access\" /> )\n                }\n\n            case ( \"/frontpage\" ):\n                if ( props.loggedIn ) {\n                    return ( <Route path=\"/frontpage\" /> )\n                } else {\n                    return ( <Redirect path=\"/access\" /> )\n                }\n\n            default:\n                return ( <Redirect to=\"/access\" /> )\n        }\n    }\n\n    RenderSwitch()\n}"]},"metadata":{},"sourceType":"module"}